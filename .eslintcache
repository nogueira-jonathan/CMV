[{"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\index.js":"1","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\App.js":"2","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Routes\\index.js":"3","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Home\\index.js":"4","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Home\\styles.js":"5","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Produtos\\index.js":"6","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Produtos\\styles.js":"7","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Services\\api.js":"8"},{"size":222,"mtime":1610940295422,"results":"9","hashOfConfig":"10"},{"size":333,"mtime":1610571733100,"results":"11","hashOfConfig":"10"},{"size":377,"mtime":1610852777569,"results":"12","hashOfConfig":"10"},{"size":555,"mtime":1610475584757,"results":"13","hashOfConfig":"10"},{"size":2695,"mtime":1610566678830,"results":"14","hashOfConfig":"10"},{"size":6433,"mtime":1610943324174,"results":"15","hashOfConfig":"10"},{"size":3470,"mtime":1610943801433,"results":"16","hashOfConfig":"10"},{"size":123,"mtime":1610571165349,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"990jhw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\index.js",[],["37","38"],"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\App.js",[],"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Routes\\index.js",[],"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Home\\index.js",[],"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Home\\styles.js",[],"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Produtos\\index.js",["39"],"import React, { useState, useEffect } from 'react';\r\nimport api from '../../Services/api';\r\nimport {Tabela, Botao, Form } from '../Produtos/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport jsPDF from 'jspdf'\r\nimport 'jspdf-autotable'\r\n\r\nconst Produtos = () => {\r\n    const [modalStyle] = React.useState(getModalStyle);\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [newNome, setNewNome] = useState('');\r\n    const [newValorCompra, setNewValorCompra] = useState('');\r\n    const [newValorCompraFinal, setNewValorCompraFinal] = useState();\r\n    const [newEstoqueInicial, setNewEstoqueInicial] = useState('');\r\n    const [newEstoqueFinal, setNewEstoqueFinal] = useState('');\r\n    const [newVendas, setNewVendas] = useState('');\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    \r\n    const loadProdutos = async () => {\r\n        try {\r\n            const response = await api.get('/produtos');\r\n            setProdutos(response.data)\r\n\r\n        } catch (error) {\r\n            console.log(\"erro ao obter produtos\", error)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProdutos();\r\n    }, []);\r\n    \r\n    function rand() {\r\n      return Math.round(Math.random() * 20) - 10;\r\n    }\r\n    \r\n    function getModalStyle() {\r\n      const top = 50 + rand();\r\n      const left = 50 + rand();\r\n    \r\n      return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n      };\r\n    }\r\n    \r\n    const useStyles = makeStyles((theme) => ({\r\n      paper: {\r\n        position: 'absolute',\r\n        width: 800,\r\n        height: 300,\r\n        \r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n      },\r\n    }));\r\n    \r\n    \r\n      const classes = useStyles();\r\n      \r\n    \r\n    \r\n      const handleOpen = () => {\r\n        setOpen(true);\r\n      };\r\n    \r\n      const handleClose = () => {\r\n        setOpen(false);\r\n      };\r\n  async function inserirProduto(e) {\r\n    e.preventDefault();\r\n\r\n    const params = {\r\n        nome: newNome,\r\n        valorCompra: newValorCompra,\r\n        valorCompraFinal: newValorCompraFinal,\r\n        estoqueInicial: newEstoqueInicial,\r\n        estoqueFinal: newEstoqueFinal,\r\n        vendas: newVendas\r\n    };\r\n\r\n    \r\n\r\n    try {\r\n        await api.post(`/produtos`, params);\r\n        loadProdutos();\r\n        setNewNome('');\r\n        setNewValorCompra('');\r\n        setNewValorCompraFinal('');\r\n        setNewEstoqueInicial('');\r\n        setNewEstoqueFinal('');\r\n        setNewVendas('');\r\n        handleClose();\r\n    } catch (error) {\r\n        console.log('error ao incluir Produto', error);\r\n    }\r\n}\r\n\r\nfunction criadorPDF() {\r\n  const doc = new jsPDF();\r\n  \r\n  doc.autoTable({html: '#simple_table', theme: 'grid', Color: '#AA1F32'});\r\n  doc.save('table.pdf');\r\n}\r\n\r\nconst body = (\r\n  <div style={modalStyle, {backgroundColor:\"grey\", margin: \"290px\", }} className={classes.paper}  >\r\n    <form onSubmit={inserirProduto} >\r\n                    \r\n                    <input type=\"text\" value={newNome} onChange={e => setNewNome(e.target.value)} placeholder=\"Digite o Produto\"/>\r\n                    <input type=\"text\" value={newValorCompra} onChange={e => setNewValorCompra(e.target.value)} placeholder=\"Digite o valor do produto em estoque\"/>\r\n                    <input type=\"text\" value={newValorCompraFinal} onChange={e => setNewValorCompraFinal(e.target.value)} placeholder=\"Digite o valor do produto comprado\"/>\r\n                    <input type=\"text\" value={newEstoqueInicial} onChange={e => setNewEstoqueInicial(e.target.value)} placeholder=\"Digite a qtd inicial no estoque\"/>\r\n                    <input type=\"text\" value={newEstoqueFinal} onChange={e => setNewEstoqueFinal(e.target.value)} placeholder=\"Digite a qtd atual no estoque\"/>\r\n                    <input type=\"text\" value={newVendas} onChange={e => setNewVendas(e.target.value)} placeholder=\"Digite a quantidade vendida\"/>\r\n                    <button type=\"submit\">Cadastrar</button>\r\n                </form>\r\n  </div>\r\n);\r\nreturn (\r\n  \r\n\r\n    <Tabela>\r\n\r\n      <Table >     \r\n            <table id=\"simple_table\">\r\n                  <tr >\r\n                      <th style={{textAlign:\"left\"}}>ID</th>\r\n                      <th>Produto</th>\r\n                      <th>Valor</th>\r\n                      <th>Valor de Compra</th>\r\n                      <th>Estoque</th>\r\n                      <th>Qtd. Comprada</th>\r\n                      <th>Qtd. Vendida</th>\r\n                      <th>CMV</th>\r\n                      \r\n                  </tr>\r\n                  {produtos.map((produto) => {\r\n                    return (                       \r\n                      <tr key={produto.id}  >                       \r\n                          <td style={{width:\"10px\"}}>{produto.id}</td> \r\n                          <td >{produto.nome}</td>\r\n                          <td>{produto.valorCompra}</td>\r\n                          <td>{produto.valorCompraFinal}</td>\r\n                          <td>{produto.estoqueInicial}</td>\r\n                          <td>{produto.estoqueFinal}</td>\r\n                          <td>{produto.vendas}</td>\r\n                          <td>{((produto.valorCompra + produto.valorCompraFinal)/(produto.estoqueInicial + produto.estoqueFinal)*produto.vendas).toPrecision(3)}</td>\r\n                                              \r\n                      </tr>                        \r\n                      )\r\n                      })}  \r\n            </table>         \r\n      </Table>\r\n          \r\n      <Botao>\r\n\r\n        <Button id=\"btnprod\" onClick={handleOpen} style={{marginRight: \"15px\"}} variant=\"outlined\" color=\"primary\">\r\n          Novo Produto\r\n        </Button>\r\n\r\n        <Button id=\"btnpdf\" variant=\"contained\" color=\"primary\" onClick={()=>criadorPDF()}>\r\n          Gerar PDF\r\n        </Button>\r\n\r\n      </Botao>\r\n      \r\n      <Modal\r\n          \r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"simple-modal-title\"\r\n          aria-describedby=\"simple-modal-description\">\r\n          \r\n              <Form>\r\n                \r\n                  {body}\r\n\r\n              </Form>\r\n  \r\n      </Modal>\r\n\r\n    </Tabela>\r\n    \r\n  );\r\n}\r\n\r\n\r\nexport default Produtos;\r\n\r\n","C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Pages\\Produtos\\styles.js",[],"C:\\Users\\Jonathan\\Downloads\\CMV\\src\\Services\\api.js",[],["40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":113,"column":25,"nodeType":"48","messageId":"49","endLine":113,"endColumn":26},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["52"],["53"],"no-global-assign","no-unsafe-negation"]